NOTE : Temporary registers are considered as
       variables of the intermediate language. 
       Variable 'R0' (that refers to the 
       physical register 'RO') is always 
       considered LIVE-IN for each node of 
       a basic block. 
       Thus, in the following control flow graph, 
       'R0' will never appear as LIVE-IN or LIVE-OUT
       variable for a statement.

       If you want to consider 'R0' as
       a normal variable, you have to set
       to 0 the value of the macro CFLOW_ALWAYS_LIVEIN_R0
       defined in "cflow_constants.h".


**************************
     CONTROL FLOW GRAPH   
**************************
NUMBER OF BASIC BLOCKS : 6 
NUMBER OF USED VARIABLES : 35 
--------------------------
START BASIC BLOCK INFOS.  
--------------------------
[BLOCK 1] 
NUMBER OF PREDECESSORS : 0 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 27 
	1.  	MOVA R1 L0 
	2.  	ADDI R2 R0 #0 
	3.  	ADD (R1) R0 R2 
	4.  	MOVA R3 L0 
	5.  	ADDI R3 R3 #1 
	6.  	ADDI R4 R0 #1 
	7.  	ADD (R3) R0 R4 
	8.  	MOVA R5 L0 
	9.  	ADDI R5 R5 #2 
	10.  	ADDI R6 R0 #2 
	11.  	ADD (R5) R0 R6 
	12.  	MOVA R7 L0 
	13.  	ADDI R7 R7 #3 
	14.  	ADDI R8 R0 #3 
	15.  	ADD (R7) R0 R8 
	16.  	MOVA R9 L0 
	17.  	ADDI R9 R9 #4 
	18.  	ADDI R10 R0 #4 
	19.  	ADD (R9) R0 R10 
	20.  	MOVA R11 L0 
	21.  	ADDI R11 R11 #5 
	22.  	ADDI R12 R0 #5 
	23.  	ADD (R11) R0 R12 
	24.  	ADDI R14 R0 #6 
	25.  	ADDI R13 R0 #2 
	26.  	ADD R7680 R0 R13 
	27.  	ADD R32767 R0 R0 
--------------------------
[BLOCK 2] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 2 
	1.  L2	SUB R15 R14 R7680 
	2.  	BEQ L1 
--------------------------
[BLOCK 3] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 9 
	1.  	MOVA R16 L0 
	2.  	ADD R16 R16 R7680 
	3.  	ADD R17 R0 (R16) 
	4.  	MOVA R18 L0 
	5.  	ADD R18 R18 R32767 
	6.  	ADD (R18) R0 R17 
	7.  	ADDI R7680 R7680 #1 
	8.  	ADDI R32767 R32767 #1 
	9.  	BT L2 
--------------------------
[BLOCK 4] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 2 
	1.  L1	SUB R15 R14 R32767 
	2.  	BEQ L3 
--------------------------
[BLOCK 5] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 6 
	1.  	MOVA R19 L0 
	2.  	ADD R19 R19 R32767 
	3.  	ADDI R20 R0 #0 
	4.  	ADD (R19) R0 R20 
	5.  	ADDI R32767 R32767 #1 
	6.  	BT L1 
--------------------------
[BLOCK 6] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 24 
	1.  L3	MOVA R21 L0 
	2.  	ADD R22 R0 (R21) 
	3.  	WRITE R22 0 
	4.  	MOVA R23 L0 
	5.  	ADDI R23 R23 #1 
	6.  	ADD R24 R0 (R23) 
	7.  	WRITE R24 0 
	8.  	MOVA R25 L0 
	9.  	ADDI R25 R25 #2 
	10.  	ADD R26 R0 (R25) 
	11.  	WRITE R26 0 
	12.  	MOVA R27 L0 
	13.  	ADDI R27 R27 #3 
	14.  	ADD R28 R0 (R27) 
	15.  	WRITE R28 0 
	16.  	MOVA R29 L0 
	17.  	ADDI R29 R29 #4 
	18.  	ADD R30 R0 (R29) 
	19.  	WRITE R30 0 
	20.  	MOVA R31 L0 
	21.  	ADDI R31 R31 #5 
	22.  	ADD R32 R0 (R31) 
	23.  	WRITE R32 0 
	24.  	HALT 
**************************


