NOTE : Temporary registers are considered as
       variables of the intermediate language. 
       Variable 'R0' (that refers to the 
       physical register 'RO') is always 
       considered LIVE-IN for each node of 
       a basic block. 
       Thus, in the following control flow graph, 
       'R0' will never appear as LIVE-IN or LIVE-OUT
       variable for a statement.

       If you want to consider 'R0' as
       a normal variable, you have to set
       to 0 the value of the macro CFLOW_ALWAYS_LIVEIN_R0
       defined in "cflow_constants.h".


**************************
     CONTROL FLOW GRAPH   
**************************
NUMBER OF BASIC BLOCKS : 5 
NUMBER OF USED VARIABLES : 20 
--------------------------
START BASIC BLOCK INFOS.  
--------------------------
[BLOCK 1] 
NUMBER OF PREDECESSORS : 0 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 21 
	1.  	MOVA R2 L1 
	2.  	ADDI R3 R0 #0 
	3.  	ADD (R2) R0 R3 
	4.  	MOVA R4 L1 
	5.  	ADDI R4 R4 #1 
	6.  	ADDI R5 R0 #1 
	7.  	ADD (R4) R0 R5 
	8.  	MOVA R6 L1 
	9.  	ADDI R6 R6 #2 
	10.  	ADDI R7 R0 #2 
	11.  	ADD (R6) R0 R7 
	12.  	MOVA R8 L1 
	13.  	ADDI R8 R8 #3 
	14.  	ADDI R9 R0 #3 
	15.  	ADD (R8) R0 R9 
	16.  	MOVA R10 L1 
	17.  	ADDI R10 R10 #4 
	18.  	ADDI R11 R0 #4 
	19.  	ADD (R10) R0 R11 
	20.  	ADDI R12 R0 #0 
	21.  	BT L3 
--------------------------
[BLOCK 2] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 5 
	1.  L4	MUL R13 R1 R1 
	2.  	MOVA R14 L2 
	3.  	ADD R14 R14 R12 
	4.  	ADD (R14) R0 R13 
	5.  	ADDI R12 R12 #1 
--------------------------
[BLOCK 3] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 2 
	1.  L3	SUBI R15 R12 #5 
	2.  	BEQ L5 
--------------------------
[BLOCK 4] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 5 
	1.  	MOVA R16 L1 
	2.  	ADD R16 R16 R12 
	3.  	ADD R17 R0 (R16) 
	4.  	ADDI R1 R17 #0 
	5.  	BT L4 
--------------------------
[BLOCK 5] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 5 
	1.  L5	MOVA R18 L2 
	2.  	ADDI R18 R18 #2 
	3.  	ADD R19 R0 (R18) 
	4.  	WRITE R19 0 
	5.  	HALT 
**************************


