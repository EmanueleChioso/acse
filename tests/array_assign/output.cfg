NOTE : Temporary registers are considered as
       variables of the intermediate language. 
       Variable 'R0' (that refers to the 
       physical register 'RO') is always 
       considered LIVE-IN for each node of 
       a basic block. 
       Thus, in the following control flow graph, 
       'R0' will never appear as LIVE-IN or LIVE-OUT
       variable for a statement.

       If you want to consider 'R0' as
       a normal variable, you have to set
       to 0 the value of the macro CFLOW_ALWAYS_LIVEIN_R0
       defined in "cflow_constants.h".


**************************
     CONTROL FLOW GRAPH   
**************************
NUMBER OF BASIC BLOCKS : 7 
NUMBER OF USED VARIABLES : 35 
--------------------------
START BASIC BLOCK INFOS.  
--------------------------
[BLOCK 1] 
NUMBER OF PREDECESSORS : 0 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 31 
	1.  	MOVA R1 L0 
	2.  	ADDI R2 R0 #2 
	3.  	ADD (R1) R0 R2 
	4.  	MOVA R3 L0 
	5.  	ADDI R3 R3 #1 
	6.  	ADDI R4 R0 #4 
	7.  	ADD (R3) R0 R4 
	8.  	MOVA R5 L0 
	9.  	ADDI R5 R5 #2 
	10.  	ADDI R6 R0 #5 
	11.  	ADD (R5) R0 R6 
	12.  	MOVA R7 L0 
	13.  	ADDI R7 R7 #3 
	14.  	ADDI R8 R0 #3 
	15.  	ADD (R7) R0 R8 
	16.  	MOVA R9 L0 
	17.  	ADDI R9 R9 #4 
	18.  	ADDI R10 R0 #1 
	19.  	ADD (R9) R0 R10 
	20.  	MOVA R11 L1 
	21.  	ADDI R12 R0 #30 
	22.  	ADD (R11) R0 R12 
	23.  	MOVA R13 L1 
	24.  	ADDI R13 R13 #1 
	25.  	ADDI R14 R0 #20 
	26.  	ADD (R13) R0 R14 
	27.  	MOVA R15 L1 
	28.  	ADDI R15 R15 #2 
	29.  	ADDI R16 R0 #10 
	30.  	ADD (R15) R0 R16 
	31.  	ADDI R17 R0 #2 
--------------------------
[BLOCK 2] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 8 
	1.  L3	MOVA R18 L1 
	2.  	ADD R18 R18 R17 
	3.  	ADD R19 R0 (R18) 
	4.  	MOVA R20 L0 
	5.  	ADD R20 R20 R17 
	6.  	ADD (R20) R0 R19 
	7.  	SUBI R17 R17 #1 
	8.  	BLT L2 
--------------------------
[BLOCK 3] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 1 
	1.  	BT L3 
--------------------------
[BLOCK 4] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 1 
	1.  L2	ADDI R21 R0 #3 
--------------------------
[BLOCK 5] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 7 
	1.  L5	MOVA R22 L0 
	2.  	ADD R22 R22 R21 
	3.  	ADDI R23 R0 #0 
	4.  	ADD (R22) R0 R23 
	5.  	ADDI R21 R21 #1 
	6.  	SUB R24 R21 R5 
	7.  	BEQ L4 
--------------------------
[BLOCK 6] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 1 
	1.  	BT L5 
--------------------------
[BLOCK 7] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 20 
	1.  L4	MOVA R25 L0 
	2.  	ADD R26 R0 (R25) 
	3.  	WRITE R26 0 
	4.  	MOVA R27 L0 
	5.  	ADDI R27 R27 #1 
	6.  	ADD R28 R0 (R27) 
	7.  	WRITE R28 0 
	8.  	MOVA R29 L0 
	9.  	ADDI R29 R29 #2 
	10.  	ADD R30 R0 (R29) 
	11.  	WRITE R30 0 
	12.  	MOVA R31 L0 
	13.  	ADDI R31 R31 #3 
	14.  	ADD R32 R0 (R31) 
	15.  	WRITE R32 0 
	16.  	MOVA R33 L0 
	17.  	ADDI R33 R33 #4 
	18.  	ADD R34 R0 (R33) 
	19.  	WRITE R34 0 
	20.  	HALT 
**************************


