NOTE : Temporary registers are considered as
       variables of the intermediate language. 
       Variable 'R0' (that refers to the 
       physical register 'RO') is always 
       considered LIVE-IN for each node of 
       a basic block. 
       Thus, in the following control flow graph, 
       'R0' will never appear as LIVE-IN or LIVE-OUT
       variable for a statement.

       If you want to consider 'R0' as
       a normal variable, you have to set
       to 0 the value of the macro CFLOW_ALWAYS_LIVEIN_R0
       defined in "cflow_constants.h".


**************************
     CONTROL FLOW GRAPH   
**************************
NUMBER OF BASIC BLOCKS : 1 
NUMBER OF USED VARIABLES : 19 
--------------------------
START BASIC BLOCK INFOS.  
--------------------------
[BLOCK 1] 
NUMBER OF PREDECESSORS : 0 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 37 
	1.  	MOVA R2 L0 
	2.  	ADDI R3 R0 #5 
	3.  	ADD (R2) R0 R3 
	4.  	MOVA R4 L0 
	5.  	ADDI R4 R4 #1 
	6.  	ADDI R5 R0 #5 
	7.  	ADD (R4) R0 R5 
	8.  	MOVA R6 L0 
	9.  	ADDI R6 R6 #2 
	10.  	ADDI R7 R0 #5 
	11.  	ADD (R6) R0 R7 
	12.  	ADDI R8 R0 #10 
	13.  	ADDI R9 R0 #15 
	14.  	ADDI R10 R0 #15 
	15.  	ADDI R11 R0 #0 
	16.  	ADDI R12 R0 #0 
	17.  	MOVA R13 L0 
	18.  	ADD R14 R0 (R13) 
	19.  	ADD R12 R14 R12 
	20.  	MUL R14 R14 R8 
	21.  	ADD R11 R14 R11 
	22.  	MOVA R15 L0 
	23.  	ADDI R15 R15 #1 
	24.  	ADD R16 R0 (R15) 
	25.  	ADD R12 R16 R12 
	26.  	MUL R16 R16 R10 
	27.  	ADD R11 R16 R11 
	28.  	MOVA R17 L0 
	29.  	ADDI R17 R17 #2 
	30.  	ADD R18 R0 (R17) 
	31.  	ADD R12 R18 R12 
	32.  	MUL R18 R18 R10 
	33.  	ADD R11 R18 R11 
	34.  	DIV R11 R11 R12 
	35.  	ADD R1 R0 R11 
	36.  	WRITE R1 0 
	37.  	HALT 
**************************


