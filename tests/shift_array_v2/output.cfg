NOTE : Temporary registers are considered as
       variables of the intermediate language. 
       Variable 'R0' (that refers to the 
       physical register 'RO') is always 
       considered LIVE-IN for each node of 
       a basic block. 
       Thus, in the following control flow graph, 
       'R0' will never appear as LIVE-IN or LIVE-OUT
       variable for a statement.

       If you want to consider 'R0' as
       a normal variable, you have to set
       to 0 the value of the macro CFLOW_ALWAYS_LIVEIN_R0
       defined in "cflow_constants.h".


**************************
     CONTROL FLOW GRAPH   
**************************
NUMBER OF BASIC BLOCKS : 7 
NUMBER OF USED VARIABLES : 36 
--------------------------
START BASIC BLOCK INFOS.  
--------------------------
[BLOCK 1] 
NUMBER OF PREDECESSORS : 0 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 27 
	1.  	MOVA R1 L0 
	2.  	ADDI R2 R0 #0 
	3.  	ADD (R1) R0 R2 
	4.  	MOVA R3 L0 
	5.  	ADDI R3 R3 #1 
	6.  	ADDI R4 R0 #1 
	7.  	ADD (R3) R0 R4 
	8.  	MOVA R5 L0 
	9.  	ADDI R5 R5 #2 
	10.  	ADDI R6 R0 #2 
	11.  	ADD (R5) R0 R6 
	12.  	MOVA R7 L0 
	13.  	ADDI R7 R7 #3 
	14.  	ADDI R8 R0 #3 
	15.  	ADD (R7) R0 R8 
	16.  	MOVA R9 L0 
	17.  	ADDI R9 R9 #4 
	18.  	ADDI R10 R0 #4 
	19.  	ADD (R9) R0 R10 
	20.  	MOVA R11 L0 
	21.  	ADDI R11 R11 #5 
	22.  	ADDI R12 R0 #5 
	23.  	ADD (R11) R0 R12 
	24.  	ADDI R13 R0 #6 
	25.  	ADDI R14 R0 #6 
	26.  	SUBI R14 R14 #1 
	27.  	ADDI R15 R0 #2 
--------------------------
[BLOCK 2] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 1 
	1.  L1	BLE L2 
--------------------------
[BLOCK 3] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 3 
	1.  	MOVA R16 L0 
	2.  	ADD R17 R0 (R16) 
	3.  	ADDI R18 R0 #1 
--------------------------
[BLOCK 4] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 10 
	1.  L4	MOVA R19 L0 
	2.  	ADD R19 R19 R18 
	3.  	ADD R20 R0 (R19) 
	4.  	SUBI R18 R18 #1 
	5.  	MOVA R21 L0 
	6.  	ADD R21 R21 R18 
	7.  	ADD (R21) R0 R20 
	8.  	ADDI R18 R18 #2 
	9.  	SUB R22 R18 R13 
	10.  	BEQ L3 
--------------------------
[BLOCK 5] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 1 
	1.  	BT L4 
--------------------------
[BLOCK 6] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 5 
	1.  L3	MOVA R23 L0 
	2.  	ADD R23 R23 R14 
	3.  	ADD (R23) R0 R17 
	4.  	SUBI R15 R15 #1 
	5.  	BT L1 
--------------------------
[BLOCK 7] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 24 
	1.  L2	MOVA R24 L0 
	2.  	ADD R25 R0 (R24) 
	3.  	WRITE R25 0 
	4.  	MOVA R26 L0 
	5.  	ADDI R26 R26 #1 
	6.  	ADD R27 R0 (R26) 
	7.  	WRITE R27 0 
	8.  	MOVA R28 L0 
	9.  	ADDI R28 R28 #2 
	10.  	ADD R29 R0 (R28) 
	11.  	WRITE R29 0 
	12.  	MOVA R30 L0 
	13.  	ADDI R30 R30 #3 
	14.  	ADD R31 R0 (R30) 
	15.  	WRITE R31 0 
	16.  	MOVA R32 L0 
	17.  	ADDI R32 R32 #4 
	18.  	ADD R33 R0 (R32) 
	19.  	WRITE R33 0 
	20.  	MOVA R34 L0 
	21.  	ADDI R34 R34 #5 
	22.  	ADD R35 R0 (R34) 
	23.  	WRITE R35 0 
	24.  	HALT 
**************************


