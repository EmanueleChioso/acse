NOTE : Temporary registers are considered as
       variables of the intermediate language. 
       Variable 'R0' (that refers to the 
       physical register 'RO') is always 
       considered LIVE-IN for each node of 
       a basic block. 
       Thus, in the following control flow graph, 
       'R0' will never appear as LIVE-IN or LIVE-OUT
       variable for a statement.

       If you want to consider 'R0' as
       a normal variable, you have to set
       to 0 the value of the macro CFLOW_ALWAYS_LIVEIN_R0
       defined in "cflow_constants.h".


**************************
     CONTROL FLOW GRAPH   
**************************
NUMBER OF BASIC BLOCKS : 4 
NUMBER OF USED VARIABLES : 46 
--------------------------
START BASIC BLOCK INFOS.  
--------------------------
[BLOCK 1] 
NUMBER OF PREDECESSORS : 0 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 26 
	1.  	MOVA R1 L0 
	2.  	ADDI R2 R0 #0 
	3.  	ADD (R1) R0 R2 
	4.  	MOVA R3 L0 
	5.  	ADDI R3 R3 #1 
	6.  	ADDI R4 R0 #1 
	7.  	ADD (R3) R0 R4 
	8.  	MOVA R5 L0 
	9.  	ADDI R5 R5 #2 
	10.  	ADDI R6 R0 #2 
	11.  	ADD (R5) R0 R6 
	12.  	MOVA R7 L0 
	13.  	ADDI R7 R7 #3 
	14.  	ADDI R8 R0 #3 
	15.  	ADD (R7) R0 R8 
	16.  	MOVA R9 L0 
	17.  	ADDI R9 R9 #4 
	18.  	ADDI R10 R0 #4 
	19.  	ADD (R9) R0 R10 
	20.  	MOVA R11 L0 
	21.  	ADDI R11 R11 #5 
	22.  	ADDI R12 R0 #5 
	23.  	ADD (R11) R0 R12 
	24.  	ADDI R13 R0 #6 
	25.  	SUBI R13 R13 #1 
	26.  	ADDI R14 R0 #2 
--------------------------
[BLOCK 2] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 1 
	1.  L1	BLE L2 
--------------------------
[BLOCK 3] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 48 
	1.  	MOVA R15 L0 
	2.  	ADD R16 R0 (R15) 
	3.  	ADDI R17 R0 #1 
	4.  	MOVA R18 L0 
	5.  	ADD R18 R18 R17 
	6.  	ADD R19 R0 (R18) 
	7.  	SUBI R17 R17 #1 
	8.  	MOVA R20 L0 
	9.  	ADD R20 R20 R17 
	10.  	ADD (R20) R0 R19 
	11.  	ADDI R17 R17 #2 
	12.  	MOVA R21 L0 
	13.  	ADD R21 R21 R17 
	14.  	ADD R22 R0 (R21) 
	15.  	SUBI R17 R17 #1 
	16.  	MOVA R23 L0 
	17.  	ADD R23 R23 R17 
	18.  	ADD (R23) R0 R22 
	19.  	ADDI R17 R17 #2 
	20.  	MOVA R24 L0 
	21.  	ADD R24 R24 R17 
	22.  	ADD R25 R0 (R24) 
	23.  	SUBI R17 R17 #1 
	24.  	MOVA R26 L0 
	25.  	ADD R26 R26 R17 
	26.  	ADD (R26) R0 R25 
	27.  	ADDI R17 R17 #2 
	28.  	MOVA R27 L0 
	29.  	ADD R27 R27 R17 
	30.  	ADD R28 R0 (R27) 
	31.  	SUBI R17 R17 #1 
	32.  	MOVA R29 L0 
	33.  	ADD R29 R29 R17 
	34.  	ADD (R29) R0 R28 
	35.  	ADDI R17 R17 #2 
	36.  	MOVA R30 L0 
	37.  	ADD R30 R30 R17 
	38.  	ADD R31 R0 (R30) 
	39.  	SUBI R17 R17 #1 
	40.  	MOVA R32 L0 
	41.  	ADD R32 R32 R17 
	42.  	ADD (R32) R0 R31 
	43.  	ADDI R17 R17 #2 
	44.  	MOVA R33 L0 
	45.  	ADD R33 R33 R13 
	46.  	ADD (R33) R0 R16 
	47.  	SUBI R14 R14 #1 
	48.  	BT L1 
--------------------------
[BLOCK 4] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 24 
	1.  L2	MOVA R34 L0 
	2.  	ADD R35 R0 (R34) 
	3.  	WRITE R35 0 
	4.  	MOVA R36 L0 
	5.  	ADDI R36 R36 #1 
	6.  	ADD R37 R0 (R36) 
	7.  	WRITE R37 0 
	8.  	MOVA R38 L0 
	9.  	ADDI R38 R38 #2 
	10.  	ADD R39 R0 (R38) 
	11.  	WRITE R39 0 
	12.  	MOVA R40 L0 
	13.  	ADDI R40 R40 #3 
	14.  	ADD R41 R0 (R40) 
	15.  	WRITE R41 0 
	16.  	MOVA R42 L0 
	17.  	ADDI R42 R42 #4 
	18.  	ADD R43 R0 (R42) 
	19.  	WRITE R43 0 
	20.  	MOVA R44 L0 
	21.  	ADDI R44 R44 #5 
	22.  	ADD R45 R0 (R44) 
	23.  	WRITE R45 0 
	24.  	HALT 
**************************


