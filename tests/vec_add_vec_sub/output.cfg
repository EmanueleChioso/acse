NOTE : Temporary registers are considered as
       variables of the intermediate language. 
       Variable 'R0' (that refers to the 
       physical register 'RO') is always 
       considered LIVE-IN for each node of 
       a basic block. 
       Thus, in the following control flow graph, 
       'R0' will never appear as LIVE-IN or LIVE-OUT
       variable for a statement.

       If you want to consider 'R0' as
       a normal variable, you have to set
       to 0 the value of the macro CFLOW_ALWAYS_LIVEIN_R0
       defined in "cflow_constants.h".


**************************
     CONTROL FLOW GRAPH   
**************************
NUMBER OF BASIC BLOCKS : 4 
NUMBER OF USED VARIABLES : 26 
--------------------------
START BASIC BLOCK INFOS.  
--------------------------
[BLOCK 1] 
NUMBER OF PREDECESSORS : 0 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 23 
	1.  	MOVA R1 L0 
	2.  	ADDI R2 R0 #1 
	3.  	ADD (R1) R0 R2 
	4.  	MOVA R3 L0 
	5.  	ADDI R3 R3 #1 
	6.  	ADDI R4 R0 #2 
	7.  	ADD (R3) R0 R4 
	8.  	MOVA R5 L0 
	9.  	ADDI R5 R5 #2 
	10.  	ADDI R6 R0 #3 
	11.  	ADD (R5) R0 R6 
	12.  	MOVA R7 L1 
	13.  	ADDI R8 R0 #3 
	14.  	ADD (R7) R0 R8 
	15.  	MOVA R9 L1 
	16.  	ADDI R9 R9 #1 
	17.  	ADDI R10 R0 #2 
	18.  	ADD (R9) R0 R10 
	19.  	MOVA R11 L1 
	20.  	ADDI R11 R11 #2 
	21.  	ADDI R12 R0 #1 
	22.  	ADD (R11) R0 R12 
	23.  	ADDI R13 R0 #3 
--------------------------
[BLOCK 2] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 2 
	1.  L3	ANDB R13 R13 R13 
	2.  	BEQ L4 
--------------------------
[BLOCK 3] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 12 
	1.  	SUBI R13 R13 #1 
	2.  	MOVA R15 L0 
	3.  	ADD R15 R15 R13 
	4.  	ADD R16 R0 (R15) 
	5.  	MOVA R17 L1 
	6.  	ADD R17 R17 R13 
	7.  	ADD R18 R0 (R17) 
	8.  	ADD R14 R16 R18 
	9.  	MOVA R19 L2 
	10.  	ADD R19 R19 R13 
	11.  	ADD (R19) R0 R14 
	12.  	BT L3 
--------------------------
[BLOCK 4] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 12 
	1.  L4	MOVA R20 L2 
	2.  	ADD R21 R0 (R20) 
	3.  	WRITE R21 0 
	4.  	MOVA R22 L2 
	5.  	ADDI R22 R22 #1 
	6.  	ADD R23 R0 (R22) 
	7.  	WRITE R23 0 
	8.  	MOVA R24 L2 
	9.  	ADDI R24 R24 #2 
	10.  	ADD R25 R0 (R24) 
	11.  	WRITE R25 0 
	12.  	HALT 
**************************


